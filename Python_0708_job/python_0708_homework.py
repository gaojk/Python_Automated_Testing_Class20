# 一、必做题
# 1.什么是类？什么是对象？
# 类：一群具有相同特征和行为的事物的统称，类是抽象的
# 对象：具体的事物，具有类的特征和行为

# 2.类由哪几部分构成？
# 类名，类的初始化方法，类的属性，类的方法

# 3.列举几个生活中类和对象的例子
# 汽车属于类，货车、轿车、三轮车都是对象
# 类的属性比如都有1个刹车
# 类的方法：都会刮雨刮器，都会亮车灯
# 货车对象的属性：车牌123，轮子4个，拖拉机对象的属性：车牌456，轮子3个
#
# 4.类的设计原则
# 请从类的命名、类中属性和方法来阐述
# 类的命名：小驼峰
# 类的属性：类下面定义的变量叫类的属性，每个对象都有类的属性
# 类的方法：类的方法中的self表示实例化方法，每个对象也都有类的方法
#
# 5.实例方法的特性？__init__方法的作用？
# 实例方法中第一个参数为self
# __init__ 可以初始化对象的属性

# 6.实例方法与类方法的区别?
# 实例方法第一个参数为self，是对象本身，可以通过实例方法传递实例和类的属性、方法，只能由实例对象调用
# 类方法使用装饰器  @classmethod，第一个参数为类对象，可以通过他来传递类的属性和方法，实例对象和类对象都可以调用
#
# 7.在类的里面和类的外面，调用实例方法、实例属性、类属性的方式？
#
# 类的里面调用实例方法(对象.实例方法)、属性(self.属性)、类属性(类名.类属性，对象.类属性)
# 类的外面调用实例方法(对象.实例方法)、属性(对象.属性)、类属性(对象.类属性，类.类属性)
#
# 8.__str__实例方法的作用?
# 返回对象的属性
#
#
# 9.编写如下程序
# 灰色的Tom猫，今年1岁，吃着美味的食物，喝着可口的饮料，非常享受的样子
# a.根据以上信息，抽象出一个类
# b.定义相关属性，并能在类的外面调用
# c.定义相关方法，在方法中打印相应信息


class Cat:
    kind = "猫"  # 类的属性

    def __init__(self, colour, name, age):  # 构造方法，形参接受对象的属性
        self.colour = colour    # 给对象赋值
        self.name = name
        self.age = age

    def eat(self):  # 实例方法
        print(f"{self.colour}的{self.name}{self.kind},今年{self.age}岁,吃着美味的事物")

    def drink(self):
        print(f"{self.colour}的{self.name}{Cat.kind},今年{self.age}岁,喝着可口的饮料")


one_cat = Cat("灰色", "Tom", 1)   # 创建对象，将对象的属性传递
one_cat.eat()   # 调用对象的方法
one_cat.drink()



# 10.使用思维导图总结最近几次课的知识点
# 提示:
#
# 	必须总结面向对象相关的知识点
